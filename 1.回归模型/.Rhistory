geom_text(stat="count",aes(label=after_stat(count)),position =position_dodge(width = 0.9),vjust=0)
ggplot(titanic_data,mapping = aes(x=SibSp,y=after_stat(count),fill=Survived))+
geom_bar(stat="count",position = "dodge")+
labs(title="The effect of Sibsp on survival",x="Sibsp",y="count")+
geom_text(stat="count",aes(label=after_stat(count)),position =position_dodge(width = 0.9),vjust=0)
ggplot(titanic_data,mapping = aes(x=Parch,y=after_stat(count),fill=Survived))+
geom_bar(stat="count",position = "dodge")+
labs(title="The effect of Parch on survival",x="Parch",y="count")+
geom_text(stat="count",aes(label=after_stat(count)),position =position_dodge(width = 0.9),vjust=0)
titanic_data$Familynum<-titanic_data$SibSp+titanic_data$Parch
ggplot(titanic_data,mapping = aes(x=Familynum,y=after_stat(count),fill=Survived))+
geom_bar(stat="count",position = "dodge")+
labs(title="The effect of Familynum on survival",x="Familynum",y="count")+
geom_text(stat="count",aes(label=after_stat(count)),position =position_dodge(width = 0.9),vjust=0)
ticket.count<-aggregate(titanic_data$Ticket,by=list(titanic_data$Ticket),function(x) sum(!is.na(x)))
titanic_data$TicketCount <- apply(titanic_data, 1, function(x) ticket.count[which(ticket.count[, 1] == x['Ticket']), 2])
titanic_data$TicketCount<-factor(sapply(titanic_data$TicketCount,function(x) ifelse(x>1,"share","unique")))
ggplot(titanic_data,mapping = aes(x=TicketCount,y=after_stat(count),fill=Survived))+
geom_bar(stat="count",position = "dodge")+
labs(title="The effect of TicketCount on survival",x="TicketCount",y="count")+
geom_text(stat="count",aes(label=after_stat(count)),position =position_dodge(width = 0.9),vjust=0)
ggplot(titanic_data,aes(x=Fare,y=after_stat(count),color=Survived))+
geom_line(aes(label=after_stat(count)),stat = "bin",binwidth=5)+
ggtitle("The effect of Fare on survival")
ggplot(titanic_data,mapping = aes(x=Embarked,y=after_stat(count),fill=Survived))+
geom_bar(stat="count",position = "dodge")+
labs(title="The effect of Embarked on survival",x="Embarked",y="count")+
geom_text(stat="count",aes(label=after_stat(count)),position =position_dodge(width = 0.9),vjust=0)
#选择特征用来建模
cols_selected<-c("Survived","Pclass","Sex","Age","Fare","Embarked","AgeState","Familynum","TicketCount")
train_data<-titanic_data[,colnames(titanic_data) %in% cols_selected]
summary(train_data)
#建模
fit1=glm(Survived~.,data=train_data,family =binomial())
summary(fit1)
#经过调整模型变量
fit2=glm(Survived~Pclass+Sex+Age+Familynum+TicketCount,data=train_data,family =binomial())
summary(fit2)
#设置随机种子
set.seed(123)
trainIndex <- createDataPartition(edu_data$Gross_Tertiary_Education_Enrollment, p = 0.8, list = FALSE)
train_data <- edu_data[trainIndex, ]
test_data <- edu_data[-trainIndex, ]
# 初步建立线性回归模型
model1 <- lm(Gross_Tertiary_Education_Enrollment ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Gross_Primary_Education_Enrollment + Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary +
Average_Youth_15_24_Literacy_Rate + Birth_Rate,
data = train_data)
summary(model1)
#筛选变量、优化模型
model2 <- lm(Gross_Tertiary_Education_Enrollment ~ Latitude + Longitude +
Average_OOSR_Upper_Secondary_Age + Average_Completion_Rate_Lower_Secondary +
Average_Completion_Rate_Upper_Secondary + Birth_Rate +
Average_Youth_15_24_Literacy_Rate,
data = train_data)
summary(model2)
# 使用测试集进行预测
predictions <- predict(model2, test_data)
# 计算均方根误差
test_error <- sqrt(mean((test_data$Gross_Tertiary_Education_Enrollment - predictions)^2))
print(test_error)
r_squared <- summary(model2)$r.squared
print(r_squared)
View(edu_data)
# 初步建立线性回归模型
model3 <- lm(Gross_Tertiary_Education_Enrollment ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary +
,
# 初步建立线性回归模型
model3 <- lm(Gross_Tertiary_Education_Enrollment ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model3)
# #筛选变量、优化模型
# model4 <- lm(Gross_Tertiary_Education_Enrollment ~ Latitude + Longitude +
#               Average_OOSR_Upper_Secondary_Age + Average_Completion_Rate_Lower_Secondary +
#               Average_Completion_Rate_Upper_Secondary + Birth_Rate +
#               Average_Youth_15_24_Literacy_Rate,
#             data = train_data)
#
# summary(model2)
#
# # 使用测试集进行预测
# predictions <- predict(model2, test_data)
#
# # 计算均方根误差
# test_error <- sqrt(mean((test_data$Gross_Tertiary_Education_Enrollment - predictions)^2))
# print(test_error)
#
#
# 初步建立线性回归模型
model3 <- lm(Unemployment_Rate ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model3)
#筛选变量、优化模型
model4 <- lm(Gross_Tertiary_Education_Enrollment ~ Latitude + Longitude +
Average_OOSR_Upper_Secondary_Age + Average_Completion_Rate_Lower_Secondary +
Average_Completion_Rate_Upper_Secondary + Birth_Rate +
Average_Youth_15_24_Literacy_Rate,
data = train_data)
summary(model2)
# # 使用测试集进行预测
# predictions <- predict(model2, test_data)
#
# # 计算均方根误差
# test_error <- sqrt(mean((test_data$Gross_Tertiary_Education_Enrollment - predictions)^2))
# print(test_error)
#
#
# 初步建立线性回归模型
model3 <- lm(Unemployment_Rate ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model3)
#筛选变量、优化模型
model4 <- lm(Unemployment_ ~ Latitude + Longitude +
Average_OOSR_Upper_Secondary_Age + Average_Completion_Rate_Lower_Secondary +
Average_Completion_Rate_Upper_Secondary + Birth_Rate +
Average_Youth_15_24_Literacy_Rate,
data = train_data)
# 初步建立线性回归模型
model3 <- lm(Unemployment_Rate ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model3)
#筛选变量、优化模型
model4 <- lm(Unemployment_Rate ~ Latitude + Longitude +
Average_OOSR_Upper_Secondary_Age + Average_Completion_Rate_Lower_Secondary +
Average_Completion_Rate_Upper_Secondary + Birth_Rate +
Average_Youth_15_24_Literacy_Rate,
data = train_data)
summary(model2)
# # 使用测试集进行预测
# predictions <- predict(model2, test_data)
#
# # 计算均方根误差
# test_error <- sqrt(mean((test_data$Gross_Tertiary_Education_Enrollment - predictions)^2))
# print(test_error)
#
#
# 初步建立线性回归模型
model3 <- lm(Unemployment_Rate ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model3)
#筛选变量、优化模型
model4 <- lm(Unemployment_Rate ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model4)
# # 使用测试集进行预测
# predictions <- predict(model2, test_data)
#
# # 计算均方根误差
# test_error <- sqrt(mean((test_data$Gross_Tertiary_Education_Enrollment - predictions)^2))
# print(test_error)
#
#
# 初步建立线性回归模型
model3 <- lm(Unemployment_Rate ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model3)
#筛选变量、优化模型
model4 <- lm(Unemployment_Rate ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model4)
# # 使用测试集进行预测
# predictions <- predict(model2, test_data)
#
# # 计算均方根误差
# test_error <- sqrt(mean((test_data$Gross_Tertiary_Education_Enrollment - predictions)^2))
# print(test_error)
#
#
# 初步建立线性回归模型
model3 <- lm(Unemployment_Rate ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model3)
#筛选变量、优化模型
model4 <- lm(Unemployment_Rate ~ Average_OOSR_Pre0Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model4)
# # 使用测试集进行预测
# predictions <- predict(model2, test_data)
#
# # 计算均方根误差
# test_error <- sqrt(mean((test_data$Gross_Tertiary_Education_Enrollment - predictions)^2))
# print(test_error)
#
#
# 初步建立线性回归模型
model3 <- lm(Unemployment_Rate ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model3)
#筛选变量、优化模型
model4 <- lm(Unemployment_Rate ~ Average_OOSR_Pre0Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model4)
# 使用测试集进行预测
predictions <- predict(model4, test_data)
# 计算均方根误差
test_error <- sqrt(mean((test_data$Unemployment_Rate - predictions)^2))
print(test_error)
model3 <- lm(Unemployment_Rate ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Gross_Primary_Education_Enrollment + Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary +
Average_Youth_15_24_Literacy_Rate + Birth_Rate,
data = train_data)
summary(model3)
# # 初步建立线性回归模型
# model3 <- lm(Unemployment_Rate ~ Latitude + Longitude +
#               Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
#               Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
#               Average_Completion_Rate_Primary +
#               Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
#             data = train_data)
#
# summary(model3)
#筛选变量、优化模型
model4 <- lm(Unemployment_Rate ~ Average_OOSR_Pre0Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model4)
# 使用测试集进行预测
predictions <- predict(model4, test_data)
# 计算均方根误差
test_error <- sqrt(mean((test_data$Unemployment_Rate - predictions)^2))
print(test_error)
# 初步建立线性回归模型
model3 <- lm(Unemployment_Rate ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model3)
#筛选变量、优化模型
model4 <- lm(Unemployment_Rate ~ Average_OOSR_Pre0Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model4)
# 使用测试集进行预测
predictions <- predict(model4, test_data)
# 计算均方根误差
test_error <- sqrt(mean((test_data$Unemployment_Rate - predictions)^2))
print(test_error)
# 初步建立线性回归模型
model3 <- lm(Unemployment_Rate ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model3)
#筛选变量、优化模型
model4 <- lm(Unemployment_Rate ~ Average_OOSR_Pre0Primary_Age + Longitude +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model4)
# 使用测试集进行预测
predictions <- predict(model4, test_data)
# 计算均方根误差
test_error <- sqrt(mean((test_data$Unemployment_Rate - predictions)^2))
print(test_error)
# 导入必要的包
library(ggplot2)
library(caret)
library(tidyverse)
# 导入数据
edu_data <- read.csv("education.csv")
summary(edu_data)
# 查找缺失值
sapply(edu_data, function(x) sum(is.na(x)))
# 查找空值
sapply(edu_data, function(x) sum(x==""))
# 去除入学率超过100%异常值
edu_data <- edu_data[edu_data$Gross_Primary_Education_Enrollment <= 100 &
edu_data$Gross_Tertiary_Education_Enrollment <= edu_data$Gross_Primary_Education_Enrollment,]
# 处理数值为0的异常值
# 定义函数来处理每一列的零值
replace_zero_with_mean <- function(column) {
mean_value <- mean(column[column != 0])  # 计算该列非零值的平均值
column[column == 0] <- mean_value  # 将为0的值替换为平均值
return(column)
}
# 对数据集除了地理坐标的每一列应用上述函数
for (i in 4:29) {
edu_data[, i] <- replace_zero_with_mean(edu_data[, i])
}
summary(edu_data)
# 后面操作均为计算平均值
edu_data$Average_OOSR_Pre0Primary_Age <- (edu_data$OOSR_Pre0Primary_Age_Male +   edu_data$OOSR_Pre0Primary_Age_Female) / 2
edu_data$Average_OOSR_Primary_Age <- (edu_data$OOSR_Primary_Age_Male +   edu_data$OOSR_Primary_Age_Female) / 2
edu_data$Average_OOSR_Lower_Secondary_Age <- (edu_data$OOSR_Lower_Secondary_Age_Male +   edu_data$OOSR_Lower_Secondary_Age_Female) / 2
edu_data$Average_OOSR_Upper_Secondary_Age <- (edu_data$OOSR_Upper_Secondary_Age_Male +   edu_data$OOSR_Upper_Secondary_Age_Female) / 2
edu_data$Average_Completion_Rate_Primary <- (edu_data$Completion_Rate_Primary_Male +   edu_data$Completion_Rate_Primary_Female) / 2
edu_data$Average_Completion_Rate_Primary <- (edu_data$Completion_Rate_Primary_Male +   edu_data$Completion_Rate_Primary_Female) / 2
edu_data$Average_Completion_Rate_Lower_Secondary <- (edu_data$Completion_Rate_Lower_Secondary_Male +   edu_data$Completion_Rate_Lower_Secondary_Female) / 2
edu_data$Average_Completion_Rate_Upper_Secondary <- (edu_data$Completion_Rate_Upper_Secondary_Male +   edu_data$Completion_Rate_Upper_Secondary_Female) / 2
edu_data$Average_Youth_15_24_Literacy_Rate <- (edu_data$Youth_15_24_Literacy_Rate_Male +   edu_data$Youth_15_24_Literacy_Rate_Female) / 2
#假设阅读能力和数学能力各占50分，则综合能力为二者均值
edu_data$Average_Grade_2_3_Proficiency <- (edu_data$Grade_2_3_Proficiency_Reading +   edu_data$Grade_2_3_Proficiency_Math) / 2
edu_data$Average_Primary_End_Proficiency <- (edu_data$Primary_End_Proficiency_Reading +   edu_data$Primary_End_Proficiency_Math) / 2
edu_data$Average_Lower_Secondary_End_Proficiency <- (edu_data$Lower_Secondary_End_Proficiency_Reading + edu_data$Lower_Secondary_End_Proficiency_Math) / 2
# 创建基础散点图函数
plot_base <- function(data, x_var, y_var, title_text) {
ggplot(data, aes(x = !!sym(x_var), y = !!sym(y_var))) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed") +
labs(title = title_text,
x = x_var,
y = y_var)
}
# 创建小学教育完成率散点图
plot_base(edu_data, "Completion_Rate_Primary_Male", "Completion_Rate_Primary_Female", "小学教育完成率")
# 创建初中教育完成率散点图
plot_base(edu_data, "Completion_Rate_Lower_Secondary_Male", "Completion_Rate_Lower_Secondary_Female", "初中教育完成率")
# 创建高中教育完成率散点图
plot_base(edu_data, "Completion_Rate_Upper_Secondary_Male", "Completion_Rate_Upper_Secondary_Female", "高中教育完成率")
# 创建基础散点图函数
plot_base <- function(data, x_var, y_var, title_text) {
ggplot(data, aes(x = !!sym(x_var), y = !!sym(y_var))) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed") +
labs(title = title_text,
x = x_var,
y = y_var)
}
# 创建二三年级阅读和数学能力分析散点图
plot_base(edu_data, "Grade_2_3_Proficiency_Reading", "Grade_2_3_Proficiency_Math", "二三年级阅读和数学能力")
# 创建小学阅读和数学能力分析散点图
plot_base(edu_data, "Primary_End_Proficiency_Reading", "Primary_End_Proficiency_Math", "小学阅读和数学能力")
# 创建小学阅读和数学能力分析散点图
plot_base(edu_data, "Lower_Secondary_End_Proficiency_Reading", "Lower_Secondary_End_Proficiency_Math", "初中阅读和数学能力")
# 创建散点图
ggplot(edu_data, aes(x = Gross_Primary_Education_Enrollment, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "基础教育入学率与高等教育入学率关系",
x = "基础教育入学率",
y = "高等教育入学率") +
theme_minimal()
# 绘制散点图分析高中教育完成率与高等教育入学率的关系
ggplot(edu_data, aes(x = Average_Completion_Rate_Upper_Secondary, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "高中教育完成率与高等教育入学率",
x = "高中教育完成率",
y = "高等教育入学率")
# 绘制散点图分析高中辍学率与高等教育入学率的关系
ggplot(edu_data, aes(x = Average_OOSR_Upper_Secondary_Age, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "高中辍学率与高等教育入学率",
x = "高中辍学率",
y = "高等教育入学率")
# 绘制散点图分析15-24岁学生读写能力与高等教育入学率的关系
ggplot(edu_data, aes(x = Average_Youth_15_24_Literacy_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "15-24岁学生读写能力与高等教育入学率",
x = "15-24岁学生读写能力",
y = "高等教育入学率")
ggplot(edu_data, aes(x = Birth_Rate, y = Gross_Tertiary_Education_Enrollment)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "出生率与高等教育入学率",
x = "出生率",
y = "高等教育入学率")
# 绘制散点图分析平均初中教育完成率与失业率的关系
ggplot(edu_data, aes(x = Average_Completion_Rate_Lower_Secondary, y = Unemployment_Rate)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "初中教育完成率与失业率",
x = "初中教育完成率",
y = "失业率")
ggplot(edu_data, aes(x = Gross_Tertiary_Education_Enrollment, y = Unemployment_Rate)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "高等教育入学率与失业率",
x = "高等教育入学率",
y = "失业率")
# 绘制散点图分析初中辍学率与失业率的关系
ggplot(edu_data, aes(x = Average_OOSR_Lower_Secondary_Age, y = Unemployment_Rate)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "初中辍学率与失业率",
x = "初中辍学率",
y = "失业率")
ggplot(edu_data, aes(x = Average_Youth_15_24_Literacy_Rate, y = Unemployment_Rate)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "15-24岁学生读写能力与失业率",
x = "15-24岁学生读写能力",
y = "失业率")
ggplot(edu_data, aes(x = Birth_Rate, y = Unemployment_Rate)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "出生率与失业率",
x = "出生率",
y = "失业率")
ggplot(edu_data, aes(x = Longitude, y = Latitude)) +
geom_point(aes(size = Unemployment_Rate, color = Unemployment_Rate), alpha = 0.5) +
scale_size_continuous(range = c(1, 8)) +  # 调整大小
scale_color_gradient(low = "white", high = "red") +  # 使用颜色展示失业率
labs(title = "地理位置与失业率",
x = "经度",
y = "纬度",
size = "失业率",
color = "失业率") +
theme_minimal()
#设置随机种子
set.seed(123)
trainIndex <- createDataPartition(edu_data$Gross_Tertiary_Education_Enrollment, p = 0.8, list = FALSE)
train_data <- edu_data[trainIndex, ]
test_data <- edu_data[-trainIndex, ]
# 初步建立线性回归模型
model1 <- lm(Gross_Tertiary_Education_Enrollment ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Gross_Primary_Education_Enrollment + Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary +
Average_Youth_15_24_Literacy_Rate + Birth_Rate,
data = train_data)
summary(model1)
#筛选变量、优化模型
model2 <- lm(Gross_Tertiary_Education_Enrollment ~ Latitude + Longitude +
Average_OOSR_Upper_Secondary_Age + Average_Completion_Rate_Lower_Secondary +
Average_Completion_Rate_Upper_Secondary + Birth_Rate +
Average_Youth_15_24_Literacy_Rate,
data = train_data)
summary(model2)
# 使用测试集进行预测
predictions <- predict(model2, test_data)
# 计算均方根误差
test_error <- sqrt(mean((test_data$Gross_Tertiary_Education_Enrollment - predictions)^2))
print(test_error)
# 初步建立线性回归模型
model3 <- lm(Unemployment_Rate ~ Latitude + Longitude +
Average_OOSR_Pre0Primary_Age + Average_OOSR_Primary_Age +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model3)
#筛选变量、优化模型
model4 <- lm(Unemployment_Rate ~ Average_OOSR_Pre0Primary_Age + Longitude +
Average_OOSR_Lower_Secondary_Age + Average_OOSR_Upper_Secondary_Age +
Average_Completion_Rate_Primary +
Average_Completion_Rate_Lower_Secondary + Average_Completion_Rate_Upper_Secondary,
data = train_data)
summary(model4)
# 使用测试集进行预测
predictions <- predict(model4, test_data)
# 计算均方根误差
test_error <- sqrt(mean((test_data$Unemployment_Rate - predictions)^2))
print(test_error)
